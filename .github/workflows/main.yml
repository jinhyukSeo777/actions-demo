name: Unit Test & Lighthouse CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '19.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Configure npm registry
      run: |
        echo "Configuring npm to use public registry"
        npm config set registry https://registry.npmjs.org/

    - name: Clear npm cache
      run: npm cache clean --force

    - name: Remove package-lock.json
      run: rm -f package-lock.json

    - name: Install dependencies
      run: npm install --registry=https://registry.npmjs.org/
      env:
        NODE_AUTH_TOKEN: ''

    - name: Run tests
      run: npm test

  lighthouse:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Configure npm registry
      run: |
        echo "Configuring npm to use public registry"
        npm config set registry https://registry.npmjs.org/
    
    - name: Clear npm cache
      run: npm cache clean --force

    - name: Remove package-lock.json
      run: rm -f package-lock.json

    - name: Install dependencies
      run: npm install --registry=https://registry.npmjs.org/
      env:
        NODE_AUTH_TOKEN: ''

    - name: Build project
      run: npm run build

    - name: Run Lighthouse CI
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      run: |
        npm install -g @lhci/cli
        lhci autorun --upload.target=filesystem --upload.outputDir=./lhci_reports || echo "Failed to run Lighthouse CI!"

    - name: Post Lighthouse results to PR comment
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract scores from the generated report
        REPORT=$(cat lhci_reports/manifest.json | jq '[.[] | select(.id == "index.html")] | .[0].summary')
        
        PERFORMANCE=$(echo $REPORT | jq '.performance')
        ACCESSIBILITY=$(echo $REPORT | jq '.accessibility')
        BEST_PRACTICES=$(echo $REPORT | jq '.bestPractices')
        SEO=$(echo $REPORT | jq '.seo')

        # Construct the comment body
        COMMENT="### Lighthouse Report\n\n"
        COMMENT+="**Performance**: ${PERFORMANCE}\n"
        COMMENT+="**Accessibility**: ${ACCESSIBILITY}\n"
        COMMENT+="**Best Practices**: ${BEST_PRACTICES}\n"
        COMMENT+="**SEO**: ${SEO}\n"

        # Post comment to PR
        curl -s -H "Authorization: token $GITHUB_TOKEN" \
          -X POST -d "{\"body\": \"$COMMENT\"}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

